LEX CODE
Save the file with ".l" extension
__________________________________________________________________________________
%option noyywrap
%{
	#include<stdio.h>
	#include "y.tab.h"
%}

%%
[0-9]+	{yylval.num=atoi(yytext); return(NUMBER);}
\n {return(0);}
. {return(yytext[0]);}
%%
__________________________________________________________________________________

YACC CODE
Save the file with ".y" extension.
__________________________________________________________________________________
%{
	#include<stdio.h>
%}

%union{
   int num;
}

%token<num> NUMBER

%left '+' '-'
%left '*' '/'

%type<num> AE
%type<num> E

%% 
AE:E {printf("The result is %d",$$);};
E:E'+'E {$$=$1+$3;}
E:E'-'E {$$=$1-$3;}
E:E'*'E {$$=$1*$3;}
E:E'/'E {$$=$1/$3;}
| NUMBER {$$=$1;};
%%
void main(){
  yyparse();
}

void yyerror(){
 printf("Error!!!");
}
_________________________________________________________________________________



Execution Procedure
Step 1: Compile LEX file (Ctrl+1)    
Step 2: Compile YACC file (Ctrl+3)    
Step 3: Open Command prompt (Ctrl+6)    
The following commands for execute the file
		> gcc lex.yy.c y.tab.c -w    
		>a
